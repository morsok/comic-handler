// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// IssuesColumns holds the columns for the "issues" table.
	IssuesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// IssuesTable holds the schema information for the "issues" table.
	IssuesTable = &schema.Table{
		Name:       "issues",
		Columns:    IssuesColumns,
		PrimaryKey: []*schema.Column{IssuesColumns[0]},
	}
	// ReadingListsColumns holds the columns for the "reading_lists" table.
	ReadingListsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ReadingListsTable holds the schema information for the "reading_lists" table.
	ReadingListsTable = &schema.Table{
		Name:       "reading_lists",
		Columns:    ReadingListsColumns,
		PrimaryKey: []*schema.Column{ReadingListsColumns[0]},
	}
	// ReleaseWeeksColumns holds the columns for the "release_weeks" table.
	ReleaseWeeksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ReleaseWeeksTable holds the schema information for the "release_weeks" table.
	ReleaseWeeksTable = &schema.Table{
		Name:       "release_weeks",
		Columns:    ReleaseWeeksColumns,
		PrimaryKey: []*schema.Column{ReleaseWeeksColumns[0]},
	}
	// SeriesColumns holds the columns for the "series" table.
	SeriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// SeriesTable holds the schema information for the "series" table.
	SeriesTable = &schema.Table{
		Name:       "series",
		Columns:    SeriesColumns,
		PrimaryKey: []*schema.Column{SeriesColumns[0]},
	}
	// StoryArcsColumns holds the columns for the "story_arcs" table.
	StoryArcsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// StoryArcsTable holds the schema information for the "story_arcs" table.
	StoryArcsTable = &schema.Table{
		Name:       "story_arcs",
		Columns:    StoryArcsColumns,
		PrimaryKey: []*schema.Column{StoryArcsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		IssuesTable,
		ReadingListsTable,
		ReleaseWeeksTable,
		SeriesTable,
		StoryArcsTable,
		UsersTable,
	}
)

func init() {
}
